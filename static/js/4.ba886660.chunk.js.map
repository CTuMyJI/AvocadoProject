{"version":3,"sources":["pages/Profile/ProfileInfo/ProfileInfo.module.css","pages/Profile/Post/Post.module.css","pages/Profile/ProfileInfo/ProfileSatusWithHooks.js","pages/Profile/ProfileInfo/ProfileInfo.js","pages/Profile/Post/Post.js","pages/Profile/MyPosts/MyPosts.js","pages/Profile/MyPosts/MyPostsContainer.js","pages/Profile/Profile.js","pages/Profile/ProfileContainer.js"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","ProfileInfo","profile","src","photos","large","userAvatar","alt","className","styles","image","fullName","aboutMe","contacts","facebook","github","Preloader","Post","wrapper","avatar","post","likeCount","maxLength10","maxLengthCreator","ProfileReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Textarea","name","validate","required","MyPosts","React","memo","postsElements","posts","reverse","map","p","key","id","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","Profile","updateNewPostText","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","profileList","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/4.ba886660.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"ProfileInfo_image__2Ok94\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Post_wrapper__2uvtR\",\"avatar\":\"Post_avatar__1AvTv\",\"likeCount\":\"Post_likeCount__1WmJv\"};","import React, { useState, useEffect } from 'react'\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status] )\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>\r\n                        {props.status || \"-----\"}\r\n                    </span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input autoFocus={true} onBlur={deactivateEditMode} onChange={onStatusChange}\r\n                        value={status} />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react'\r\nimport Preloader from '../../../components/common/Preloader'\r\nimport userAvatar from '../../../assets/images/user.jpg'\r\nimport styles from './ProfileInfo.module.css'\r\nimport ProfileStatusWithHooks from './ProfileSatusWithHooks'\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img src={profile.photos.large || userAvatar} alt='...' className={styles.image} />\r\n            </div>\r\n            <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n            <h3>{profile.fullName}</h3>\r\n            <ul>About Me: <h6>{profile.aboutMe}</h6></ul>\r\n            <ul>Facebook: <h6>{profile.contacts.facebook}</h6></ul>\r\n            <ul>Github: <h6>{profile.contacts.github}</h6></ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react'\r\nimport styles from './Post.module.css'\r\nimport userAvatar from '../../../assets/images/user.jpg'\r\nimport Preloader from '../../../components/common/Preloader'\r\n\r\nconst Post = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.wrapper}>\r\n                <img className={styles.avatar} src={props.profile.photos.large || userAvatar} alt='...' />\r\n            </div>\r\n            <div>\r\n                <ul>{props.post}</ul>\r\n            </div>\r\n            <div>\r\n                <ul>\r\n                    Like: {props.likeCount}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport Post from '../Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\"\r\nimport {Textarea} from \"../../../components/common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst ProfileForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    placeholder='Post text'\r\n                    className=\"form-control mr-sm-2\"\r\n                    component={Textarea}\r\n                    name={\"newPostText\"}\r\n                    validate={[required, maxLength10]}\r\n                ></Field>\r\n            </div>\r\n            <div>\r\n                <button className=\"btn btn-success btn-lg\">\r\n                    Add post\r\n                </button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ProfileReduxForm = reduxForm({ form: 'ProfileAddNewPostForm' })(ProfileForm)\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postsElements =\r\n        [...props.posts]\r\n            .reverse()\r\n            .map(p => <Post key={p.id} post={p.post} likeCount={p.likeCount} profile={props.profile}/>);\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n    return (\r\n        <div>\r\n            <h3>My posts</h3>\r\n            <ProfileReduxForm onSubmit={onAddPost}/>\r\n            <div>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default MyPosts;","import { connect } from 'react-redux'\r\nimport {addPost} from '../../../redux/Reducers/profileReducer'\r\nimport MyPosts from './MyPosts'\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n        profile: state.profilePage.profile\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {addPost})(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from 'react'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer'\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo\r\n                profile={props.profile}\r\n                newPostText={props.newPostText}\r\n                addPost={props.addPost}\r\n                updateNewPostText={props.updateNewPostText}\r\n                status={props.status}\r\n                updateStatus={props.updateStatus}\r\n            />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport {addPost, getUserProfile, getStatus, updateStatus} from '../../redux/Reducers/profileReducer'\r\nimport {withRouter} from 'react-router-dom'\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n    \r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n        }\r\n    \r\n    render() {\r\n        return (\r\n            <Profile {...this.props} \r\n                profile={this.props.profile}\r\n                profileList={this.props.profileList}\r\n                posts={this.props.posts}\r\n                addPost={this.props.addPost}\r\n                status={this.props.status}\r\n                updateStatus={this.props.updateStatus} />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    posts: state.profilePage.posts,\r\n    profileList: state.profilePage.profileList,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {addPost, getUserProfile, getStatus, updateStatus}),\r\n    withRouter\r\n)(ProfileContainer);"],"sourceRoot":""}