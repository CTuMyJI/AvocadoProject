{"version":3,"sources":["pages/Onconsult/Onconsult.module.css","pages/Onconsult/DialogItem/DialogItem.module.css","../node_modules/classnames/index.js","pages/Onconsult/Messages/Message.module.css","pages/Onconsult/DialogItem/DialogItem.js","pages/Onconsult/Messages/Message.js","pages/Onconsult/Onconsult.js","hoc/WithAuthRedirect.js","pages/Onconsult/OnconsultContainer.js"],"names":["module","exports","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","call","join","default","DialogItem","props","path","id","className","s","dialogsItems","active","dialogImage","src","avatar","alt","to","name","Message","wrapper","cx","message","currentUser","alignRight","alignLeft","mine","yours","maxLength50","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","textarea","Field","component","Textarea","placeholder","validate","required","button","Onconsult","dialogsElements","dialogs","map","o","messagesElements","messageList","m","chat","values","addMessage","newMessageText","mapStateToPropsForRedicect","state","isAuth","auth","compose","connect","messages","Component","RedirectComponent","this","React"],"mappings":"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","file":"static/js/3.0a01cd8a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Onconsult_dialogs__2vbtt\",\"dialogsItems\":\"Onconsult_dialogsItems__QDAte\",\"active\":\"Onconsult_active__3xj9q\",\"button\":\"Onconsult_button__3tPYk\",\"textarea\":\"Onconsult_textarea__FXSMr\",\"chat\":\"Onconsult_chat__3QiFM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"DialogItem_dialogs__kCge9\",\"dialogsItems\":\"DialogItem_dialogsItems__nozKD\",\"dialogImage\":\"DialogItem_dialogImage__1N2FJ\",\"active\":\"DialogItem_active__1l7eA\"};","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg) && arg.length) {\n        var inner = classNames.apply(null, arg);\n\n        if (inner) {\n          classes.push(inner);\n        }\n      } else if (argType === 'object') {\n        for (var key in arg) {\n          if (hasOwn.call(arg, key) && arg[key]) {\n            classes.push(key);\n          }\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames.default = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Message_wrapper__1x1Ec\",\"message\":\"Message_message__2DWMI\",\"alignRight\":\"Message_alignRight__2cnEw\",\"alignLeft\":\"Message_alignLeft__1Bh54\",\"mine\":\"Message_mine__3jNNc\",\"yours\":\"Message_yours__27HES\"};","import React from 'react'\r\nimport s from './DialogItem.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst DialogItem = (props) => {\r\n\r\n    let path = \"/onconsult/\" + props.id;\r\n\r\n    return (\r\n        <div className={s.dialogsItems + ' ' + s.active}> \r\n            <div className={s.active}>ONLINE</div>\r\n            <img className={s.dialogImage} src={props.avatar} alt='*' />\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem","import React from 'react'\r\nimport cx from 'classnames'\r\nimport s from './Message.module.css'\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={cx(s.message, props.currentUser ? s.alignRight : s.alignLeft)}>\r\n                <div className={cx(props.currentUser ? s.mine : s.yours)}>\r\n                {props.message}\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message","import React from 'react'\r\nimport s from './Onconsult.module.css'\r\nimport DialogItem from '../Onconsult/DialogItem/DialogItem'\r\nimport Message from './Messages/Message'\r\nimport { reduxForm, Field } from 'redux-form'\r\nimport { Textarea } from '../../components/common/FormsControls/FormsControls'\r\nimport { required, maxLengthCreator } from '../../utils/validators/validators'\r\n\r\nconst Onconsult = (props) => {\r\n    \r\n    let dialogsElements =\r\n        props.dialogs.map(o => <DialogItem name={o.name} id={o.id} avatar={o.avatar} key={o.id} />)\r\n    let messagesElements =\r\n        props.messageList.map(m => <Message {...m} key={m.id} />)\r\n\r\n    let addNewMessage = (values) => {\r\n        props.addMessage(values.newMessageText);\r\n    }\r\n\r\n    return (\r\n        <div className=\"jumbotron\">\r\n            <div className={s.dialogs}>\r\n                <div className={s.dialogsItems}>\r\n                    <h3>Users:</h3>\r\n                    {dialogsElements}\r\n                </div>\r\n                <div className={s.chat}>\r\n                    <h3>Chat:</h3>\r\n                    {messagesElements}\r\n                    <AddMessageReduxForm onSubmit={addNewMessage} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={s.textarea}>\r\n                <Field\r\n                    component={Textarea} name=\"newMessageText\" placeholder=\"Enter your message text\"\r\n                    className=\"form-control mr-sm-2\" validate={[required, maxLength50]}/>\r\n            </div>\r\n            <div className={s.button}>\r\n                <button className=\"btn btn-success btn-lg\">\r\n                    Send\r\n                </button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm({form: \"onconsultAddMessageForm\"})(AddMessageForm)\r\n\r\nexport default Onconsult;","import React from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\n\r\nlet mapStateToPropsForRedicect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    let ConnectedRedirectComponent = connect(mapStateToPropsForRedicect)(RedirectComponent);\r\n\r\n    return ConnectedRedirectComponent;\r\n}","import { addMessage } from '../../redux/Reducers/messagesReducer'\r\nimport Onconsult from './Onconsult'\r\nimport { connect } from 'react-redux'\r\nimport { withAuthRedirect } from '../../hoc/WithAuthRedirect'\r\nimport { compose } from 'redux'\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogs,\r\n        messageList: state.messages.messageList,\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {addMessage}),\r\n    withAuthRedirect\r\n)(Onconsult);"],"sourceRoot":""}